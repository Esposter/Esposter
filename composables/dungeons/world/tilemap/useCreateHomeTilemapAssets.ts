import { ObjectType } from "@/generated/tiled/propertyTypes/class/ObjectType";
import { TilesetKey } from "@/models/dungeons/keys/TilesetKey";
import { LayerId } from "@/models/dungeons/scene/world/home/LayerId";
import { useSettingsStore } from "@/store/dungeons/settings";
import { useWorldSceneStore } from "@/store/dungeons/world/scene";

export const useCreateHomeTilemapAssets = () => {
  const settingsStore = useSettingsStore();
  const { debugTileLayerAlpha } = storeToRefs(settingsStore);
  const worldSceneStore = useWorldSceneStore();
  const { encounterLayer, signLayer, chestLayer } = storeToRefs(worldSceneStore);
  const basicPlainsTileset = useCreateTileset(TilesetKey.BasicPlains);
  const beachAndCavesTileset = useCreateTileset(TilesetKey.BeachAndCaves);
  const houseCreateTileset = useCreateTileset(TilesetKey.House);
  const bushesTileset = useCreateTileset(TilesetKey.Bushes);
  const collisionTileset = useCreateTileset(TilesetKey.Collision);
  const encounterTileset = useCreateTileset(TilesetKey.Encounter);
  const grassTileset = useCreateTileset(TilesetKey.Grass);
  useCreateLayer(LayerId.Ground, [basicPlainsTileset, grassTileset]);
  useCreateLayer(LayerId.Building, houseCreateTileset);
  useCreateLayer(LayerId.Water, beachAndCavesTileset);
  useCreateLayer(LayerId.Decoration, [basicPlainsTileset, bushesTileset]);
  useCreateLayer(LayerId.Sign, basicPlainsTileset);
  useCreateLayer(LayerId.TreeBottom, basicPlainsTileset);
  useCreateLayer(LayerId.TreeTop, basicPlainsTileset);
  useCreateLayer(LayerId.Fence, basicPlainsTileset);
  useCreateLayer(LayerId.Boulder, basicPlainsTileset);
  useCreateLayer(LayerId.Foreground, [basicPlainsTileset, houseCreateTileset]);
  encounterLayer.value = useCreateLayer(LayerId.Encounter, encounterTileset).setAlpha(debugTileLayerAlpha.value);
  useCreateLayer(LayerId.Collision, collisionTileset).setAlpha(debugTileLayerAlpha.value);
  signLayer.value = useObjectLayer(ObjectType.Sign);
  chestLayer.value = useObjectLayer(ObjectType.Chest);
};
