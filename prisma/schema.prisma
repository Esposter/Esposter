datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String         @id @default(uuid())
  username  String         @unique
  avatar    String?
  rooms     RoomsOnUsers[]
  posts     Post[]
  updoots   Updoot[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt
  deletedAt DateTime?
}

model Room {
  id        String         @id @default(uuid())
  name      String
  avatar    String?
  users     RoomsOnUsers[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt
  deletedAt DateTime?
}

model RoomsOnUsers {
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?

  @@id([userId, roomId])
}

model Post {
  id          String    @id @default(uuid())
  title       String    @default("")
  description String    @default("")
  noPoints    Int       @default(0)
  noComments  Int       @default(0)
  ranking     Float
  edited      Boolean   @default(false)
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String
  updoots     Updoot[]
  depth       Int       @default(0)
  parent      Post?     @relation("children", fields: [parentId], references: [id])
  parentId    String?
  children    Post[]    @relation("children")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  deletedAt   DateTime?
}

model Updoot {
  value     Int
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  deletedAt DateTime?

  @@id([userId, postId])
}
